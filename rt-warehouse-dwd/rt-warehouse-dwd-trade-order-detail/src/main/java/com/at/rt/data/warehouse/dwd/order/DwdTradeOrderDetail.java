package com.at.rt.data.warehouse.dwd.order;

import com.at.rt.data.warehouse.StreamExecEnvConf;
import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;

import java.time.Duration;

/**
 * DwdTradeOrderDetail
 *
 * @author wenzhilong
 */
public class DwdTradeOrderDetail {
    public static void main(String[] args) {

//        StreamExecutionEnvironment env = StreamExecEnvConf.builderStreamEnv(args);
//        EnvironmentSettings settings = EnvironmentSettings.newInstance().inStreamingMode().build();
//        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env, settings);
////
//        // 设置状态的保留时间[传输的延迟 + 业务上的滞后关系]
//        tableEnv.getConfig().setIdleStateRetention(Duration.ofSeconds(10));

        StreamTableEnvironment tableEnv = StreamExecEnvConf.builderStreamTableEnv(args);
        // 设置状态的保留时间[传输的延迟 + 业务上的滞后关系]
        tableEnv.getConfig().setIdleStateRetention(Duration.ofSeconds(10));

//        tableEnv.executeSql("CREATE TABLE topic_db (\n"
//                + "    `database` string,\n"
//                + "    `table` string,\n"
//                + "    `type` string,\n"
//                + "    `ts` bigint,\n"
//                + "    `data` MAP<string, string>,\n"
//                + "    `old` MAP<string, string>,\n"
//                + "    pt as proctime(),\n"
//                + "    et as to_timestamp_ltz(ts, 0), \n"
//                + "    watermark for et as et - interval '3' second \n"
//                + ")\n"
//                + "WITH (\n"
//                + "    'connector' = 'kafka',\n"
//                + "    'topic' = 'ODS_BASE_DB',\n"
//                + "    'properties.bootstrap.servers' = 'hadoop102:9092,hadoop103:9092,hadoop104:9092',\n"
//                + "    'properties.group.id' = 'DwdTradeOrderDetail',  \n"
//                + "    'scan.startup.mode' = 'earliest-offset',\n"
//                + "    'format' = 'json'\n"
//                + ")");
//
//        tableEnv.executeSql("create temporary view order_detail as \n"
//                + "select \n"
//                + "    data['id'] id,\n"
//                + "    data['order_id'] order_id,\n"
//                + "    data['sku_id'] sku_id,\n"
//                + "    data['sku_name'] sku_name,\n"
//                + "    data['create_time'] create_time,\n"
//                + "    data['source_id'] source_id,\n"
//                + "    data['source_type'] source_type,\n"
//                + "    data['sku_num'] sku_num,\n"
//                + "    cast(cast(data['sku_num'] as decimal(16,2)) * cast(data['order_price'] as decimal(16,2)) as String) split_original_amount, -- 分摊原始总金额\n"
//                + "    data['split_total_amount'] split_total_amount,  -- 分摊总金额\n"
//                + "    data['split_activity_amount'] split_activity_amount, -- 分摊活动金额\n"
//                + "    data['split_coupon_amount'] split_coupon_amount, -- 分摊的优惠券金额\n"
//                + "    ts \n"
//                + "from topic_db \n"
//                + "where `table`='order_detail' \n"
//                + "and `type`='insert'");
//
//        tableEnv.executeSql("create temporary view order_info as \n"
//                + "select \n"
//                + "    data['id'] id,\n"
//                + "    data['user_id'] user_id,\n"
//                + "    data['province_id'] province_id \n"
//                + "from topic_db \n"
//                + "where `table`='order_info' \n"
//                + "and `type`='insert'");
//
//        tableEnv.executeSql("create temporary view order_detail_activity as \n"
//                + "select \n"
//                + "    data['order_detail_id'] order_detail_id, \n"
//                + "    data['activity_id'] activity_id, \n"
//                + "    data['activity_rule_id'] activity_rule_id \n"
//                + "from topic_db \n"
//                + "where `table`='order_detail_activity' \n"
//                + "and `type`='insert'");
//
//        tableEnv.executeSql("create temporary view order_detail_coupon as\n"
//                + "select \n"
//                + "    data['order_detail_id'] order_detail_id, \n"
//                + "    data['coupon_id'] coupon_id \n"
//                + "from topic_db \n"
//                + "where `table`='order_detail_coupon' \n"
//                + "and `type`='insert'");
//
//        tableEnv.executeSql("select \n"
//                + "    od.id,\n"
//                + "    od.order_id,\n"
//                + "    oi.user_id,\n"
//                + "    od.sku_id,\n"
//                + "    od.sku_name,\n"
//                + "    oi.province_id,\n"
//                + "    act.activity_id,\n"
//                + "    act.activity_rule_id,\n"
//                + "    cou.coupon_id,\n"
//                + "    date_format(od.create_time, 'yyyy-MM-dd') date_id,  -- 年月日\n"
//                + "    od.create_time,\n"
//                + "    od.sku_num,\n"
//                + "    od.split_original_amount,\n"
//                + "    od.split_activity_amount,\n"
//                + "    od.split_coupon_amount,\n"
//                + "    od.split_total_amount,\n"
//                + "    od.ts \n"
//                + "from order_detail od \n"
//                + "join order_info oi \n"
//                + "    on od.order_id=oi.id \n"
//                + "left join order_detail_activity act \n"
//                + "    on od.id=act.order_detail_id \n"
//                + "left join order_detail_coupon cou \n"
//                + "    on od.id=cou.order_detail_id").print();


//        tableEnv.executeSql("select * from order_detail_coupon") .print();

        String sql = "\n"
                + "-- source\n"
                + "CREATE TABLE topic_db (\n"
                + "    `database` string, -- iiii\n"
                + "    `table` string,\n"
                + "    `type` string,\n"
                + "    `ts` bigint,\n"
                + "    `data` MAP<string, string>,\n"
                + "    `old` MAP<string, string>,\n"
                + "    pt as proctime(),\n"
                + "    et as to_timestamp_ltz(ts, 0), \n"
                + "    watermark for et as et - interval '3' second \n"
                + ")\n"
                + "WITH (\n"
                + "    'connector' = 'kafka',\n"
                + "    'topic' = 'ODS_BASE_DB',\n"
                + "    'properties.bootstrap.servers' = 'hadoop102:9092,hadoop103:9092,hadoop104:9092',\n"
                + "    'properties.group.id' = 'DwdTradeOrderDetail',  \n"
                + "    'scan.startup.mode' = 'earliest-offset',\n"
                + "    'format' = 'json'\n"
                + ");\n"
                + "\n"
                + "-- 过滤出订单明细数据\n"
                + "create temporary view order_detail as \n"
                + "select \n"
                + "    data['id'] id,\n"
                + "    data['order_id'] order_id,\n"
                + "    data['sku_id'] sku_id,\n"
                + "    data['sku_name'] sku_name,\n"
                + "    data['create_time'] create_time,\n"
                + "    data['source_id'] source_id,\n"
                + "    data['source_type'] source_type,\n"
                + "    data['sku_num'] sku_num,\n"
                + "    cast(cast(data['sku_num'] as decimal(16,2)) * cast(data['order_price'] as decimal(16,2)) as String) split_original_amount, -- 分摊原始总金额\n"
                + "    data['split_total_amount'] split_total_amount,  -- 分摊总金额\n"
                + "    data['split_activity_amount'] split_activity_amount, -- 分摊活动金额\n"
                + "    data['split_coupon_amount'] split_coupon_amount, -- 分摊的优惠券金额\n"
                + "    ts \n"
                + "from topic_db \n"
                + "where `table`='order_detail' \n"
                + "and `type`='insert'\n"
                + ";\n"
                + "\n"
                + "-- 过滤出订单数据\n"
                + "create temporary view order_info as \n"
                + "select \n"
                + "    data['id'] id,\n"
                + "    data['user_id'] user_id,\n"
                + "    data['province_id'] province_id \n"
                + "from topic_db \n"
                + "where `table`='order_info' \n"
                + "and `type`='insert' \n"
                + ";\n"
                + "\n"
                + "-- 过滤出明细活动数据\n"
                + "create temporary view order_detail_activity as \n"
                + "select \n"
                + "    data['order_detail_id'] order_detail_id, \n"
                + "    data['activity_id'] activity_id, \n"
                + "    data['activity_rule_id'] activity_rule_id \n"
                + "from topic_db \n"
                + "where `table`='order_detail_activity' \n"
                + "and `type`='insert'\n"
                + ";\n"
                + "\n"
                + "-- 过滤出明细优惠券数据\n"
                + "create temporary view order_detail_coupon as\n"
                + "select \n"
                + "    data['order_detail_id'] order_detail_id, \n"
                + "    data['coupon_id'] coupon_id \n"
                + "from topic_db \n"
                + "where `table`='order_detail_coupon' \n"
                + "and `type`='insert'\n"
                + "; \n"
                + "\n"
                + "create table dwd_trade_order_detail (\n"
                + "    id string,\n"
                + "    order_id string,\n"
                + "    user_id string,\n"
                + "    sku_id string,\n"
                + "    sku_name string,\n"
                + "    province_id string,\n"
                + "    activity_id string,\n"
                + "    activity_rule_id string,\n"
                + "    coupon_id string,\n"
                + "    date_id string,\n"
                + "    create_time string,\n"
                + "    sku_num string,\n"
                + "    split_original_amount string,\n"
                + "    split_activity_amount string,\n"
                + "    split_coupon_amount string,\n"
                + "    split_total_amount string,\n"
                + "    ts bigint,\n"
                + "    primary key(id) not enforced \n"
                + ")\n"
                + "WITH (\n"
                + "    'connector' = 'upsert-kafka',\n"
                + "    'topic' = 'dwd_trade_order_detail',\n"
                + "    'properties.bootstrap.servers' = 'hadoop102:9092,hadoop103:9092,hadoop104:9092',\n"
                + "    'key.format' = 'json',\n"
                + "    'value.format' = 'json'\n"
                + ")\n"
                + ";\n"
                + "\n"
                + "create table dwd_trade_order_detail_aa (\n"
                + "    id string,\n"
                + "    order_id string,\n"
                + "    user_id string,\n"
                + "    sku_id string,\n"
                + "    sku_name string,\n"
                + "    province_id string,\n"
                + "    activity_id string,\n"
                + "    activity_rule_id string,\n"
                + "    coupon_id string,\n"
                + "    date_id string,\n"
                + "    create_time string,\n"
                + "    sku_num string,\n"
                + "    split_original_amount string,\n"
                + "    split_activity_amount string,\n"
                + "    split_coupon_amount string,\n"
                + "    split_total_amount string,\n"
                + "    ts bigint,\n"
                + "    primary key(id) not enforced \n"
                + ")\n"
                + "WITH (\n"
                + "    'connector' = 'upsert-kafka',\n"
                + "    'topic' = 'dwd_trade_order_detail_aa',\n"
                + "    'properties.bootstrap.servers' = 'hadoop102:9092,hadoop103:9092,hadoop104:9092',\n"
                + "    'key.format' = 'json',\n"
                + "    'value.format' = 'json'\n"
                + ")\n"
                + ";\n"
                + "\n"
                + "BEGIN STATEMENT SET;      --写入多个Sink时，必填\n"
                + "-- 关联上述4张表\n"
                + "insert into dwd_trade_order_detail\n"
                + "select \n"
                + "    od.id,\n"
                + "    od.order_id,\n"
                + "    oi.user_id,\n"
                + "    od.sku_id,\n"
                + "    od.sku_name,\n"
                + "    oi.province_id,\n"
                + "    act.activity_id,\n"
                + "    act.activity_rule_id,\n"
                + "    cou.coupon_id,\n"
                + "    date_format(od.create_time, 'yyyy-MM-dd') date_id,  -- 年月日\n"
                + "    od.create_time,\n"
                + "    od.sku_num,\n"
                + "    od.split_original_amount,\n"
                + "    od.split_activity_amount,\n"
                + "    od.split_coupon_amount,\n"
                + "    od.split_total_amount,\n"
                + "    od.ts \n"
                + "from order_detail od \n"
                + "join order_info oi \n"
                + "    on od.order_id=oi.id \n"
                + "left join order_detail_activity act \n"
                + "    on od.id=act.order_detail_id \n"
                + "left join order_detail_coupon cou \n"
                + "    on od.id=cou.order_detail_id\n"
                + ";\n"
                + "\n"
                + "-- 关联上述4张表\n"
                + "insert into dwd_trade_order_detail_aa\n"
                + "select \n"
                + "    od.id,\n"
                + "    od.order_id,\n"
                + "    oi.user_id,\n"
                + "    od.sku_id,\n"
                + "    od.sku_name,\n"
                + "    oi.province_id,\n"
                + "    act.activity_id,\n"
                + "    act.activity_rule_id,\n"
                + "    cou.coupon_id,\n"
                + "    date_format(od.create_time, 'yyyy-MM-dd') date_id,  -- 年月日\n"
                + "    od.create_time,\n"
                + "    od.sku_num,\n"
                + "    od.split_original_amount,\n"
                + "    od.split_activity_amount,\n"
                + "    od.split_coupon_amount,\n"
                + "    od.split_total_amount,\n"
                + "    od.ts \n"
                + "from order_detail od \n"
                + "join order_info oi \n"
                + "    on od.order_id=oi.id \n"
                + "left join order_detail_activity act \n"
                + "    on od.id=act.order_detail_id \n"
                + "left join order_detail_coupon cou \n"
                + "    on od.id=cou.order_detail_id\n"
                + ";\n"
                + "END;      --写入多个Sink时，必填";

        String sql2 = "\n"
                + "-- source\n"
                + "CREATE TABLE topic_db (\n"
                + "    `database` string, -- iiii\n"
                + "    `table` string,\n"
                + "    `type` string,\n"
                + "    `ts` bigint,\n"
                + "    `data` MAP<string, string>,\n"
                + "    `old` MAP<string, string>,\n"
                + "    pt as proctime(),\n"
                + "    et as to_timestamp_ltz(ts, 0), \n"
                + "    watermark for et as et - interval '3' second \n"
                + ")\n"
                + "WITH (\n"
                + "    'connector' = 'kafka',\n"
                + "    'topic' = 'ODS_BASE_DB',\n"
                + "    'properties.bootstrap.servers' = 'hadoop102:9092,hadoop103:9092,hadoop104:9092',\n"
                + "    'properties.group.id' = 'DwdTradeOrderDetail',  \n"
                + "    'scan.startup.mode' = 'earliest-offset',\n"
                + "    'format' = 'json'\n"
                + ");\n"
                + "\n"
                + "-- 过滤出订单明细数据\n"
                + "create temporary view order_detail as \n"
                + "select \n"
                + "    data['id'] id,\n"
                + "    data['order_id'] order_id,\n"
                + "    data['sku_id'] sku_id,\n"
                + "    data['sku_name'] sku_name,\n"
                + "    data['create_time'] create_time,\n"
                + "    data['source_id'] source_id,\n"
                + "    data['source_type'] source_type,\n"
                + "    data['sku_num'] sku_num,\n"
                + "    cast(cast(data['sku_num'] as decimal(16,2)) * cast(data['order_price'] as decimal(16,2)) as String) split_original_amount, -- 分摊原始总金额\n"
                + "    data['split_total_amount'] split_total_amount,  -- 分摊总金额\n"
                + "    data['split_activity_amount'] split_activity_amount, -- 分摊活动金额\n"
                + "    data['split_coupon_amount'] split_coupon_amount, -- 分摊的优惠券金额\n"
                + "    ts \n"
                + "from topic_db \n"
                + "where `table`='order_detail' \n"
                + "and `type`='insert'\n"
                + ";\n"
                + "\n"
                + "-- 过滤出订单数据\n"
                + "create temporary view order_info as \n"
                + "select \n"
                + "    data['id'] id,\n"
                + "    data['user_id'] user_id,\n"
                + "    data['province_id'] province_id \n"
                + "from topic_db \n"
                + "where `table`='order_info' \n"
                + "and `type`='insert' \n"
                + ";\n"
                + "\n"
                + "-- 过滤出明细活动数据\n"
                + "create temporary view order_detail_activity as \n"
                + "select \n"
                + "    data['order_detail_id'] order_detail_id, \n"
                + "    data['activity_id'] activity_id, \n"
                + "    data['activity_rule_id'] activity_rule_id \n"
                + "from topic_db \n"
                + "where `table`='order_detail_activity' \n"
                + "and `type`='insert'\n"
                + ";\n"
                + "\n"
                + "-- 过滤出明细优惠券数据\n"
                + "create temporary view order_detail_coupon as\n"
                + "select \n"
                + "    data['order_detail_id'] order_detail_id, \n"
                + "    data['coupon_id'] coupon_id \n"
                + "from topic_db \n"
                + "where `table`='order_detail_coupon' \n"
                + "and `type`='insert'\n"
                + "; \n"
                + "\n"
                + "create table dwd_trade_order_detail (\n"
                + "    id string,\n"
                + "    order_id string,\n"
                + "    user_id string,\n"
                + "    sku_id string,\n"
                + "    sku_name string,\n"
                + "    province_id string,\n"
                + "    activity_id string,\n"
                + "    activity_rule_id string,\n"
                + "    coupon_id string,\n"
                + "    date_id string,\n"
                + "    create_time string,\n"
                + "    sku_num string,\n"
                + "    split_original_amount string,\n"
                + "    split_activity_amount string,\n"
                + "    split_coupon_amount string,\n"
                + "    split_total_amount string,\n"
                + "    ts bigint,\n"
                + "    primary key(id) not enforced \n"
                + ")\n"
                + "WITH (\n"
                + "    'connector' = 'upsert-kafka',\n"
                + "    'topic' = 'dwd_trade_order_detail',\n"
                + "    'properties.bootstrap.servers' = 'hadoop102:9092,hadoop103:9092,hadoop104:9092',\n"
                + "    'key.format' = 'json',\n"
                + "    'value.format' = 'json'\n"
                + ")\n"
                + ";\n"
                + "\n"
                + "BEGIN STATEMENT SET;      --写入多个Sink时，必填\n"
                + "-- 关联上述4张表\n"
                + "insert into dwd_trade_order_detail\n"
                + "select \n"
                + "    od.id,\n"
                + "    od.order_id,\n"
                + "    oi.user_id,\n"
                + "    od.sku_id,\n"
                + "    od.sku_name,\n"
                + "    oi.province_id,\n"
                + "    act.activity_id,\n"
                + "    act.activity_rule_id,\n"
                + "    cou.coupon_id,\n"
                + "    date_format(od.create_time, 'yyyy-MM-dd') date_id,  -- 年月日\n"
                + "    od.create_time,\n"
                + "    od.sku_num,\n"
                + "    od.split_original_amount,\n"
                + "    od.split_activity_amount,\n"
                + "    od.split_coupon_amount,\n"
                + "    od.split_total_amount,\n"
                + "    od.ts \n"
                + "from order_detail od \n"
                + "join order_info oi \n"
                + "    on od.order_id=oi.id \n"
                + "left join order_detail_activity act \n"
                + "    on od.id=act.order_detail_id \n"
                + "left join order_detail_coupon cou \n"
                + "    on od.id=cou.order_detail_id\n"
                + ";\n"
                + "END;      --写入多个Sink时，必填";


        StreamExecEnvConf.execSQL(tableEnv, sql2);
    }
}
